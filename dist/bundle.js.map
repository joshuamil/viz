{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 8fc8e7fa7c32e2cb4cb2","webpack:///./src/assets/scripts/utils.js","webpack:///./src/assets/scripts/index.js","webpack:///./src/assets/scripts/aggregates.js","webpack:///./src/assets/scripts/render.js","webpack:///./node_modules/markobj/markobj.js","webpack:///./src/assets/scripts/actions.js","webpack:///./src/assets/data/config.json","webpack:///./src/assets/data/table.json","webpack:///./src/assets/data/sprints.json"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","arrayContains","array","value","length","parseLink","link","result","replace","a","document","createElement","setAttribute","appendChild","createTextNode","parseValue","data","parts","split","forEach","part","parseData","input","_this","this","row","issues","task","key","priority","fields","description","summary","status","assignee","displayName","numtasks","debt","risk","toLowerCase","indexOf","rank","estimate","aggregatetimeoriginalestimate","timespent","aggregatetimespent","remaining","isNaN","parseInt","epic","customfield_10003","getEpic","sprint","customfield_10007","Array","isArray","parseSprint","current","history","pushed","sp","index","push","sort","b","console","log","appendSprints","config","sprints","conf","item","label","raw","match","includes","utils","agg","render","actions","table","resources","baseUrl","getContent","url","fetch","then","res","json","response","Promise","all","map","results","stories","settings","aggregates","parseAggregates","renderHeader","renderTable","renderAggregates","navigation","phase","mood","totals","tasks","completed","rate","blockers","lost","incidents","project","subtotals","getCurrentSprint","getCurrentPhase","field","class","expected","spilled","hours","dev","qa","Math","ceil","hoursPerPoint","toFixed","getCurrentMood","rating","_typeof","Symbol","iterator","obj","constructor","markobj","th1","th2","th3","dates","d1","d2","newRow1","newRow2","newRow3","header","querySelector","headRow","headers","querySelectorAll","phases","sprintsPerPhase","el","innerText","Date","startDate","endDate","getMonth","getDate","removeChild","tbody","tr","td","column","cls","title","hidden","sprints1","sprints2","sprints3","sprints4","sprints5","sprints6","sprints7","sprints8","blanks","percentage","completion","completionClass","spilledClass","defaultClass","footerRows","html","rootEl","rootIx","substring","tmp","innerHTML","childNodes","displayCurrent","displayNone","style","display","displayMe","displayAll","button","addEventListener","event","element","target","id","getAttribute","hideFutureSprints","blocker","delay","early","resourceDeficitHourBlocks","jiraUrl"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n\n  // Find a value in an array\n  arrayContains: function arrayContains(array, value) {\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] === value) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n\n  // Parse links in configured columns\n  parseLink: function parseLink(value, link) {\n    var result = link.replace('@value', value);\n    var a = document.createElement('a');\n    a.setAttribute('href', result);\n    a.setAttribute('target', '_blank');\n    a.appendChild(document.createTextNode(value));\n    return a;\n  },\n\n\n  // Parse a multi-part value\n  parseValue: function parseValue(value, data) {\n    var parts = value.split('.');\n    var result = data;\n    parts.forEach(function (part) {\n      if (result && result.hasOwnProperty(part)) {\n        result = result[part];\n      }\n    });\n    return result;\n  },\n\n\n  // Parse Jira data into data element\n  parseData: function parseData(input) {\n    var _this = this;\n\n    var data = [];\n    var row = {};\n    input.issues.forEach(function (task) {\n\n      row = {};\n      row.key = task.key;\n      row.priority = task.fields.priority.name;\n      row.description = task.fields.summary;\n      row.status = task.fields.status.name;\n      row.assignee = !task.fields.assignee ? '' : task.fields.assignee.displayName;\n\n      row.numtasks = 1;\n      row.debt = '';\n\n      // Calculate risk\n      row.risk = 0;\n      if (row.priority.toLowerCase().indexOf('block') > -1) {\n        row.risk = 2;\n      }\n\n      // Calculate numeric priority\n      row.rank = 6;\n      if (row.priority.toLowerCase().indexOf('block') > -1) {\n        row.rank = 0;\n      } else if (row.priority.toLowerCase().indexOf('highest') > -1) {\n        row.rank = 1;\n      } else if (row.priority.toLowerCase().indexOf('high') > -1) {\n        row.rank = 2;\n      } else if (row.priority.toLowerCase().indexOf('medium') > -1) {\n        row.rank = 3;\n      } else if (row.priority.toLowerCase().indexOf('lowest') > -1) {\n        row.rank = 5;\n      } else if (row.priority.toLowerCase().indexOf('low') > -1) {\n        row.rank = 4;\n      }\n\n      // Calculate the estimate field\n      row.estimate = task.fields.aggregatetimeoriginalestimate;\n      row.timespent = task.fields.aggregatetimespent ? task.fields.aggregatetimespent : 0;\n      row.remaining = row.estimate - row.timespent;\n      if (!isNaN(row.estimate)) {\n        row.estimate = parseInt(parseInt(row.estimate, 10) / 3600, 10);\n      }\n\n      // Calculate remaining & percentage\n      if (!isNaN(row.remaining)) {\n        row.remaining = parseInt(parseInt(row.remaining, 10) / 3600, 10);\n      }\n\n      // Get epic information\n      row.epic = task.fields.customfield_10003;\n      row.epic = _this.getEpic(row.epic, input);\n\n      // Get sprint information\n      row.sprint = task.fields.customfield_10007;\n      if (row.sprint && row.sprint !== null && Array.isArray(row.sprint)) {\n        row.sprint = _this.parseSprint(row.sprint);\n      }\n\n      // Populate empty sprint values\n      if (!row.sprint) {\n        row.sprint = { current: 999, history: [] };\n      }\n\n      // Capture Sprint data\n      row.pushed = 0;\n      if (row.sprint && row.sprint.history) {\n        row.sprint.history.forEach(function (sp, index) {\n          if (row.sprint.current === sp) {\n            row['sprint' + sp] = row.remaining < 0 ? '0' : row.remaining;\n            if (row['sprint' + sp] === '' || row['sprint' + sp] === 0) {\n              row['sprint' + sp] = '0';\n            }\n          } else {\n            row['sprint' + sp] = \"-\";\n            row.pushed++;\n          }\n        });\n      }\n\n      // Add to collection\n      data.push(row);\n    });\n\n    // Sort based on Sprint then Priority / Rank\n    data.sort(function (a, b) {\n      if (a.sprint) {\n        return a.sprint.current - b.sprint.current || a.rank - b.rank;\n      }\n    });\n\n    console.log('----- Data Object -----');\n    console.log(data);\n\n    return data;\n  },\n\n\n  // Append Sprints to Configuration\n  appendSprints: function appendSprints(config, sprints) {\n    var conf = [];\n    config.forEach(function (item) {\n      conf.push(item);\n      if (item.label.indexOf('Sprint') === 0) {\n        sprints.forEach(function (sprint) {\n          conf.push(sprint);\n        });\n      }\n    });\n    config = conf;\n    return config;\n  },\n\n\n  // Parses Sprint value from string\n  parseSprint: function parseSprint(input) {\n    var sprint = '';\n    var result = {};\n    result.raw = input;\n    result.current = input[input.length - 1];\n    result.history = [];\n\n    // Capture the current Sprint\n    sprint = result.current.match(/(name=[^,]*,)/);\n    if (sprint !== null && Array.isArray(sprint)) {\n      result.current = sprint[sprint.length - 1].replace(/([^0-9]*)/ig, '');\n    }\n\n    // Create a Sprint History log\n    result.raw.forEach(function (item) {\n      var sp = item.match(/(name=[^,]*,)/);\n      sp = sp[sp.length - 1].replace(/([^0-9]*)/ig, '');\n      if (!result.history.includes(sp)) {\n        result.history.push(sp);\n      }\n    });\n\n    return result;\n  },\n\n\n  // Create an Epic Link\n  getEpic: function getEpic(epic, data) {\n    for (var i = 0; i < data.issues.length; i++) {\n      if (data.issues[0].key === epic) {\n        return data.issues[0].fields.summary;\n      }\n    }\n    return epic;\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar agg = __webpack_require__(2);\nvar render = __webpack_require__(3);\nvar actions = __webpack_require__(5);\n\nvar config = __webpack_require__(6);\nvar table = __webpack_require__(7);\nvar sprints = __webpack_require__(8);\n\nvar styles = __webpack_require__(9);\n\n// Fetches content\nvar init = function init() {\n\n  var resources = [config.baseUrl];\n\n  var getContent = function getContent(url) {\n    return fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      return response;\n    });\n  };\n\n  Promise.all(resources.map(getContent)).then(function (results) {\n\n    var stories = results[0];\n\n    // Append Sprint Data to Configuration\n    var settings = utils.appendSprints(table, sprints);\n\n    // Parse Story Data\n    var data = utils.parseData(stories);\n    var aggregates = agg.parseAggregates(data, sprints, config);\n\n    // Render Header Row\n    render.renderHeader(sprints, config, aggregates);\n\n    // Render Table\n    data.forEach(function (task) {\n      render.renderTable(task, settings, config, aggregates);\n    });\n\n    // Render the Aggregate Values\n    render.renderAggregates(aggregates);\n\n    // Assign Actions\n    actions.navigation(aggregates.sprint);\n  });\n};\n\n// Initialize the app\ninit();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  parseAggregates: function parseAggregates(data, sprints, config) {\n\n    var aggregates = {\n      phase: 0,\n      sprint: 0,\n      risk: 0,\n      debt: 0,\n      mood: ':|',\n      totals: {\n        sprint: {\n          tasks: 0,\n          completed: 0,\n          rate: 0,\n          blockers: 0,\n          pushed: 0,\n          lost: 0,\n          incidents: 0\n        },\n        project: {\n          tasks: 0,\n          completed: 0,\n          rate: 0,\n          blockers: 0,\n          pushed: 0,\n          lost: 0,\n          incidents: 0\n        }\n      },\n      subtotals: []\n    };\n\n    aggregates.sprint = this.getCurrentSprint(sprints);\n    aggregates.phase = this.getCurrentPhase(sprints);\n\n    sprints.forEach(function (sprint) {\n      aggregates.subtotals[sprint.field] = {\n        phase: parseInt(sprint.phase, 10),\n        sprint: parseInt(sprint.label.replace(/[^0-9]/g, ''), 10),\n        class: sprint.class,\n        tasks: 0,\n        completed: 0,\n        estimate: 0,\n        remaining: 0,\n        expected: 0,\n        spilled: 0,\n        hours: {\n          dev: 0,\n          qa: 0\n        }\n      };\n    });\n\n    data.forEach(function (row) {\n\n      // Get Pushed #\n      if (row.pushed && row.pushed > 0) {\n        aggregates.totals.project.pushed++;\n      }\n\n      // Get risk\n      if (row.risk && row.risk > 0) {\n        aggregates.risk++;\n      }\n\n      // Calculate story-based totals\n      if (row.numtasks && row.numtasks > 0) {\n        aggregates.totals.project.tasks++;\n        if (row.status === \"Done\") {\n          aggregates.totals.project.completed++;\n        }\n        if (row.priority === \"Blocker\") {\n          aggregates.totals.project.blockers++;\n        }\n        if (parseInt(row.sprint.current, 10) === parseInt(aggregates.sprint, 10)) {\n          aggregates.totals.sprint.tasks++;\n          if (row.status === \"Done\") {\n            aggregates.totals.sprint.completed++;\n          }\n          if (row.priority === \"Blocker\") {\n            aggregates.totals.sprint.blockers++;\n          }\n        }\n\n        // Get Sprint totals\n        if (row.sprint && row.sprint.current) {\n          if (aggregates.subtotals.hasOwnProperty('sprint' + row.sprint.current)) {\n            aggregates.subtotals['sprint' + row.sprint.current].tasks++;\n            aggregates.subtotals['sprint' + row.sprint.current].estimate += !isNaN(row.estimate) ? row.estimate : 0;\n            aggregates.subtotals['sprint' + row.sprint.current].remaining += row.remaining;\n            aggregates.subtotals['sprint' + row.sprint.current].hours.dev = Math.ceil(aggregates.subtotals['sprint' + row.sprint.current].estimate * config.hoursPerPoint * config.estimate.dev);\n            aggregates.subtotals['sprint' + row.sprint.current].hours.qa = Math.ceil(aggregates.subtotals['sprint' + row.sprint.current].estimate * config.hoursPerPoint * config.estimate.qa);\n          }\n        }\n\n        // Get Sprint-totals\n        sprints.forEach(function (sprint) {\n          if (row.hasOwnProperty(sprint.field) && row[sprint.field] === '-') {\n\n            aggregates.subtotals[sprint.field].tasks++;\n            aggregates.subtotals[sprint.field].spilled++;\n            aggregates.subtotals[sprint.field].estimate += !isNaN(row.estimate) ? row.estimate : 0;\n            aggregates.subtotals[sprint.field].remaining += row.remaining;\n            aggregates.subtotals[sprint.field].hours.dev = Math.ceil(aggregates.subtotals[sprint.field].estimate * config.hoursPerPoint * config.estimate.dev);\n            aggregates.subtotals[sprint.field].hours.qa = Math.ceil(aggregates.subtotals[sprint.field].estimate * config.hoursPerPoint * config.estimate.qa);\n          } else if (row.hasOwnProperty(sprint.field) && row.status === 'Done') {\n\n            aggregates.subtotals[sprint.field].completed++;\n          }\n        });\n      }\n    });\n\n    // Final totals\n    aggregates.totals.project.rate = (aggregates.totals.project.completed / aggregates.totals.project.tasks * 100).toFixed(2);\n    aggregates.totals.sprint.rate = (aggregates.totals.sprint.completed / aggregates.totals.sprint.tasks * 100).toFixed(2);\n\n    aggregates.mood = this.getCurrentMood(aggregates);\n\n    console.log('----- Aggregate Data Object -----');\n    console.log(aggregates);\n\n    return aggregates;\n  },\n  getCurrentSprint: function getCurrentSprint(data) {\n    var sprint = 0;\n    data.forEach(function (row) {\n      if (row.class && row.class === \"current\") {\n        sprint = row.label.replace('Sprint ', '');\n      }\n    });\n    return parseInt(sprint, 10);\n  },\n  getCurrentPhase: function getCurrentPhase(data) {\n    var phase = 0;\n    data.forEach(function (row) {\n      if (row.phase && row.class && row.class === \"current\") {\n        phase = row.phase;\n      }\n    });\n    return parseInt(phase, 10);\n  },\n  getCurrentMood: function getCurrentMood(aggregates) {\n    var rating = 0;\n\n    /*\n    aggregages.risk\n    aggregates.debt\n    aggregates.totals.sprint.blockers\n    aggregates.totals.sprint.rate\n    */\n\n    // Risk Ranking\n    if (aggregates.risk > 10) {\n      rating += 5;\n    } else if (aggregates.risk > 20) {\n      rating += 10;\n    } else if (aggregates.risk >= 25) {\n      rating += 15;\n    }\n\n    // Debt Ranking\n    if (aggregates.debt > 0) {\n      rating += 2;\n    } else if (aggregates.debt > 10) {\n      rating += 4;\n    } else if (aggregates.debt >= 15) {\n      rating += 6;\n    } else if (aggregates.debt >= 25) {\n      rating += 8;\n    }\n\n    // Rate Ranking\n    if (aggregates.totals.sprint.expected < aggregates.totals.sprint.rate) {\n      rating -= 5;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 10) {\n      rating += 2;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 15) {\n      rating += 4;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 20) {\n      rating += 6;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 25) {\n      rating += 8;\n    }\n\n    // Blocker Ranking\n    if (aggregates.totals.sprint.blockers > 0) {\n      rating += 25;\n    }\n\n    // Moods\n    if (rating <= 5) {\n      aggregates.mood = \":)\";\n    } else if (rating > 5 && rating <= 10) {\n      aggregates.mood = \":|\";\n    } else if (rating > 15 && rating <= 20) {\n      aggregates.mood = \":/\";\n    } else if (rating > 25) {\n      aggregates.mood = \":(\";\n    }\n  }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar utils = __webpack_require__(0);\nvar markobj = __webpack_require__(4);\n\nmodule.exports = {\n\n  // Inject Sprints / Phases into Table\n  renderHeader: function renderHeader(sprints, config, aggregates) {\n    var th1 = void 0,\n        th2 = void 0,\n        th3 = '';\n    var dates = '';\n    var d1 = void 0,\n        d2 = void 0,\n        current = '';\n    var newRow1 = document.createElement('tr');\n    var newRow2 = document.createElement('tr');\n    var newRow3 = document.createElement('tr');\n    var header = document.querySelector('#release-plan thead');\n    var headRow = header.querySelector('tr');\n    var headers = headRow.querySelectorAll('th');\n\n    var phases = [];\n    var sprintsPerPhase = parseInt(config.sprintsPerPhase, 10);\n\n    headers.forEach(function (el) {\n      if (el.innerText === \"Sprint\") {\n        newRow1.appendChild(el);\n        sprints.forEach(function (sprint) {\n\n          // Populate Phase labels\n          if (!utils.arrayContains(phases, sprint.phase)) {\n\n            current = '';\n            if (aggregates && parseInt(aggregates.phase, 10) === parseInt(sprint.phase, 10)) {\n              current = 'current';\n            }\n\n            th1 = document.createElement('th');\n            th1.setAttribute('colspan', sprintsPerPhase);\n            th1.setAttribute('class', current + ' phase phase' + sprint.phase + ' ' + sprint.class);\n            th1.appendChild(document.createTextNode('Phase ' + sprint.phase));\n          }\n\n          // Populate Sprint labels\n          th2 = document.createElement('th');\n          th2.setAttribute('class', 'sprint nowrap ' + sprint.class);\n          th2.appendChild(document.createTextNode(sprint.label));\n\n          // Populate dates\n          th3 = document.createElement('th');\n          th3.setAttribute('class', 'dates nowrap ' + sprint.class);\n          d1 = new Date(sprint.startDate);\n          d2 = new Date(sprint.endDate);\n          dates = d1.getMonth() + 1 + '/' + d1.getDate();\n          dates += '-' + (d2.getMonth() + 1) + '/' + d2.getDate();\n          th3.appendChild(document.createTextNode(dates));\n\n          // Append rows to the header\n          if (!utils.arrayContains(phases, sprint.phase)) {\n            newRow1.appendChild(th1);\n            phases.push(sprint.phase);\n          }\n          newRow2.appendChild(th2);\n          newRow3.appendChild(th3);\n        });\n      } else {\n        newRow1.appendChild(el);\n      }\n    });\n\n    header.removeChild(headRow);\n    header.appendChild(newRow1);\n    header.appendChild(newRow2);\n    header.appendChild(newRow3);\n  },\n\n\n  // Renders rows into the table\n  renderTable: function renderTable(task, sprints, config, aggregates) {\n\n    var tbody = document.querySelector('#release-plan tbody');\n    var tr = void 0,\n        td = void 0;\n    var column = '';\n    var value = '';\n\n    tr = document.createElement('tr');\n    tr.setAttribute('id', task.key);\n    tr.setAttribute('data-sprint', task.sprint.current);\n    tr.setAttribute('data-assignee', task.assignee);\n\n    if (task.priority.toLowerCase().indexOf('block') > -1) {\n      tr.setAttribute('class', 'blocker');\n    }\n\n    tbody.appendChild(tr);\n\n    sprints.forEach(function (item, index) {\n\n      column = item.label;\n      value = task[item.field];\n\n      if (item.field.indexOf('.') > -1) {\n        value = utils.parseValue(item.field, task);\n      }\n\n      // Create a new cell\n      td = document.createElement('td');\n\n      // Clear \"999\" from Sprints\n      if (item.field.indexOf('sprint') > -1 && value === 999) {\n        value = '';\n      }\n\n      if (item.class.indexOf('@value') > -1) {\n        var cls = value.toLowerCase().replace(/(\\s){1,}/ig, '-');\n        td.setAttribute('class', cls + ' ' + item.class);\n      } else {\n        if (item.phase && item.class.indexOf('phase') === -1) {\n          item.class += ' phase' + item.phase;\n        }\n        td.setAttribute('class', item.class);\n      }\n\n      if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== \"object\") {\n\n        if (item.title) {\n          td.setAttribute('title', value);\n        }\n\n        if (item.hidden) {\n\n          td.setAttribute('data-value', value);\n        } else if (item.link && item.link !== '') {\n          var a = utils.parseLink(value, item.link);\n          td.appendChild(a);\n        } else if (value && value !== '') {\n\n          td.appendChild(document.createTextNode(value));\n\n          if (value === \"-\") {\n            td.setAttribute('class', item.class + ' pushed');\n          }\n\n          if (task.sprint && task.sprint.current && value !== '-' && column.indexOf('Sprint ') > -1) {\n            td.setAttribute('class', item.class + ' active');\n          }\n        }\n      }\n\n      tr.appendChild(td);\n    });\n  },\n\n\n  // Renders totals into the grid\n  renderAggregates: function renderAggregates(aggregates) {\n\n    var sprints1 = void 0,\n        sprints2 = void 0,\n        sprints3 = void 0,\n        sprints4 = void 0,\n        sprints5 = void 0,\n        sprints6 = void 0,\n        sprints7 = void 0,\n        sprints8 = void 0,\n        blanks = void 0;\n    var table = document.querySelector('table');\n\n    blanks = '<tr><td colspan=\"6\" class=\"empty label\"></td>';\n\n    // Loop through the aggregate values\n    for (var key in aggregates.subtotals) {\n\n      var percentage = aggregates.subtotals[key].tasks / aggregates.totals.project.tasks * 100;\n      var completion = aggregates.subtotals[key].completed / aggregates.totals.project.tasks * 100;\n      var completionClass = completion < 100 ? 'bad' : 'good';\n      var spilledClass = parseInt(aggregates.subtotals[key].spilled, 10) > 0 ? 'warning' : 'white';\n      var phase = 'phase' + aggregates.subtotals[key].phase;\n      var defaultClass = aggregates.subtotals[key].class;\n\n      sprints1 += '<td class=\"' + defaultClass + ' total\">' + aggregates.subtotals[key].estimate + '</td>';\n      sprints2 += '<td class=\"' + defaultClass + ' subtotal\">' + aggregates.subtotals[key].hours.dev + '</td>';\n      sprints3 += '<td class=\"' + defaultClass + ' subtotal\">' + aggregates.subtotals[key].hours.qa + '</td>';\n      sprints4 += '<td class=\"' + defaultClass + ' ' + spilledClass + ' ' + phase + '\">' + aggregates.subtotals[key].spilled + '</td>';\n      sprints5 += '<td class=\"' + defaultClass + ' subtotal ' + phase + '\">' + aggregates.subtotals[key].tasks + '</td>';\n      sprints6 += '<td class=\"' + defaultClass + ' total ' + phase + '\">' + percentage + '%</td>';\n      sprints7 += '<td class=\"' + defaultClass + ' subtotal ' + phase + '\">' + aggregates.subtotals[key].completed + '</td>';\n      sprints8 += '<td class=\"' + defaultClass + ' subtotal ' + completionClass + '\">' + completion + '%</td>';\n\n      blanks += '<td class=\"' + defaultClass + ' empty ' + phase + '\"></td>';\n    }\n\n    blanks += '<td colspan=\"5\" class=\"empty plain\"></td></tr>';\n\n    // Build out the footer\n    var footerRows = markobj('<tfoot>\\n      <tr><td colspan=\"6\" class=\"label\">Total story points per Sprint</td>' + sprints1 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n      <tr><td colspan=\"6\" class=\"label\">Total Dev Hours per Sprint</td>' + sprints2 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n      <tr><td colspan=\"6\" class=\"label\">Total QA Hours per Sprint</td>' + sprints3 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n      <tr><td colspan=\"6\" class=\"label\">Stories Spilled across Sprints</td>' + sprints4 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n      ' + blanks + '\\n      <tr><td colspan=\"6\" class=\"label\">Total Stories by Sprint</td>' + sprints5 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n      <tr><td colspan=\"6\" class=\"label\">Target Completion Percentage</td>' + sprints6 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n      ' + blanks + '\\n      <tr><td colspan=\"6\" class=\"label\">Sprint Stories Completed</td>' + sprints7 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n      <tr><td colspan=\"6\" class=\"label\">Sprint Completion Percentage</td>' + sprints8 + '<td colspan=\"5\" class=\"plain\"></td></tr>\\n    </tfoot>');\n\n    // Append the footer to the table\n    table.appendChild(footerRows);\n  }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = exports = markobj;\n\n// Returns an object built from an HTML string\nfunction markobj(html) {\n\n  var rootEl = 'div';\n  var rootIx = 0;\n\n  // If you're creating elements that are children of tables, then you have to\n  // use a table as the root element. A tbody is also appended to any newly\n  // made table, so our returned index has to increase\n  if (html.substring(1, 3) === 'tr' || html.substring(1, 3) === 'td' || html.substring(1, 3) === 'th' || html.substring(1, 6) === 'tbody' || html.substring(1, 6) === 'thead' || html.substring(1, 6) === 'tfoot' || html.substring(1, 8) === 'caption' || html.substring(1, 4) === 'col' || html.substring(1, 9) === 'colgroup') {\n    rootEl = 'table';\n  }\n\n  if (html.substring(1, 6) === 'tbody' || html.substring(1, 6) === 'thead' || html.substring(1, 6) === 'tfoot') {\n    rootIx = 0;\n  }\n\n  if (html.substring(1, 3) === 'tr') {\n    rootIx = 1;\n  }\n\n  if (html.substring(1, 3) === 'td' || html.substring(1, 3) === 'th') {\n    rootIx = 2;\n  }\n\n  var tmp = document.createElement(rootEl);\n  tmp.innerHTML = html;\n\n  if (rootIx === 2) {\n    return tmp.childNodes[0].childNodes[0].childNodes[0];\n  } else if (rootIx === 1) {\n    return tmp.childNodes[0].childNodes[0];\n  }\n  return tmp.childNodes[0];\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = {\n  displayCurrent: function displayCurrent(sprint) {\n    this.displayNone();\n    var future = document.querySelectorAll('.future');\n    future.forEach(function (el) {\n      el.style.display = 'none';\n    });\n    var mine = document.querySelectorAll('[data-sprint=\"' + sprint + '\"]');\n    mine.forEach(function (el) {\n      el.style.display = 'table-row';\n    });\n  },\n  displayMe: function displayMe() {\n    var me = 'Joshua Miller';\n    var theirs = document.querySelectorAll('table tbody tr');\n    theirs.forEach(function (el) {\n      el.style.display = 'none';\n    });\n    var mine = document.querySelectorAll('[data-assignee=\"' + me + '\"]');\n    mine.forEach(function (el) {\n      el.style.display = 'table-row';\n    });\n  },\n  displayAll: function displayAll() {\n    var rows = document.querySelectorAll('table tbody tr');\n    rows.forEach(function (el) {\n      el.style.display = 'table-row';\n    });\n    var future = document.querySelectorAll('.future');\n    future.forEach(function (el) {\n      el.style.display = 'table-cell';\n    });\n  },\n  displayNone: function displayNone() {\n    var rows = document.querySelectorAll('table tbody tr');\n    rows.forEach(function (el) {\n      el.style.display = 'none';\n    });\n  },\n\n\n  /* Assign Click Actions to Buttons */\n  navigation: function navigation(sprint) {\n    var _this = this;\n\n    var nav = document.querySelectorAll('nav ul li a');\n    nav.forEach(function (button) {\n      button.addEventListener('click', function (event) {\n        var element = event.target;\n        var id = element.getAttribute('id');\n        if (id === 'current') {\n          _this.displayCurrent(sprint);\n        } else if (id === 'me') {\n          _this.displayMe();\n        } else {\n          _this.displayAll();\n        }\n      });\n    });\n  }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"hideFutureSprints\":false,\"sprintsPerPhase\":3,\"hoursPerPoint\":1,\"estimate\":{\"dev\":0.66,\"qa\":0.34},\"risk\":{\"blocker\":2,\"delay\":1,\"early\":-1,\"debt\":0.25,\"resourceDeficitHourBlocks\":25},\"baseUrl\":\"http://localhost/viz/src/assets/data/sample-full.json\",\"jiraUrl\":\"https://daymon.atlassian.net/rest/api/2/search?jql=project%20%3D%20NES%20and%20status%20!%3D%20resolved%20and%20type%20in%20(story,epic,bug,task)%20order%20by%20rank%20&maxResults=1000&startAt=0\"}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = [{\"label\":\"Priority\",\"field\":\"priority\",\"class\":\"priority @value\",\"hidden\":true,\"title\":true},{\"label\":\"Epic\",\"field\":\"epic\",\"class\":\"nowrap\"},{\"label\":\"Description\",\"field\":\"description\",\"class\":\"left wide\"},{\"label\":\"Identifier\",\"field\":\"key\",\"class\":\"nowrap\",\"link\":\"https://daymon.atlassian.net/browse/@value\"},{\"label\":\"Estimate\",\"field\":\"estimate\",\"class\":\"\"},{\"label\":\"Sprint\",\"field\":\"sprint.current\",\"class\":\"\"},{\"label\":\"Status\",\"field\":\"status\",\"class\":\"status @value\"},{\"label\":\"Risk\",\"field\":\"risk\",\"class\":\"risk\"},{\"label\":\"Debt\",\"field\":\"debt\",\"class\":\"debt grey-10\"},{\"label\":\"Pushed\",\"field\":\"pushed\",\"class\":\"pushed grey-10\"},{\"label\":\"Assignee\",\"field\":\"assignee\",\"class\":\"left\"}]\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = [{\"label\":\"Sprint 18\",\"field\":\"sprint18\",\"startDate\":\"08/14/2017\",\"endDate\":\"08/28/2017\",\"phase\":\"1\",\"class\":\"past\"},{\"label\":\"Sprint 19\",\"field\":\"sprint19\",\"startDate\":\"08/29/2017\",\"endDate\":\"09/11/2017\",\"phase\":\"1\",\"class\":\"past\"},{\"label\":\"Sprint 20\",\"field\":\"sprint20\",\"startDate\":\"09/12/2017\",\"endDate\":\"09/25/2017\",\"phase\":\"1\",\"class\":\"current\"},{\"label\":\"Sprint 21\",\"field\":\"sprint21\",\"startDate\":\"09/26/2017\",\"endDate\":\"10/09/2017\",\"phase\":\"2\",\"class\":\"future\"},{\"label\":\"Sprint 22\",\"field\":\"sprint22\",\"startDate\":\"10/10/2017\",\"endDate\":\"10/23/2017\",\"phase\":\"2\",\"class\":\"future\"},{\"label\":\"Sprint 23\",\"field\":\"sprint23\",\"startDate\":\"10/24/2017\",\"endDate\":\"11/06/2017\",\"phase\":\"2\",\"class\":\"future\"},{\"label\":\"Sprint 24\",\"field\":\"sprint24\",\"startDate\":\"11/07/2017\",\"endDate\":\"11/20/2017\",\"phase\":\"3\",\"class\":\"future\"},{\"label\":\"Sprint 25\",\"field\":\"sprint25\",\"startDate\":\"11/21/2017\",\"endDate\":\"12/04/2017\",\"phase\":\"3\",\"class\":\"future\"},{\"label\":\"Sprint 26\",\"field\":\"sprint26\",\"startDate\":\"12/05/2017\",\"endDate\":\"12/18/2017\",\"phase\":\"3\",\"class\":\"future\"},{\"label\":\"Sprint 27\",\"field\":\"sprint27\",\"startDate\":\"12/19/2017\",\"endDate\":\"01/01/2018\",\"phase\":\"4\",\"class\":\"future\"},{\"label\":\"Sprint 28\",\"field\":\"sprint28\",\"startDate\":\"01/02/2018\",\"endDate\":\"01/15/2018\",\"phase\":\"4\",\"class\":\"future\"},{\"label\":\"Sprint 29\",\"field\":\"sprint29\",\"startDate\":\"01/16/2018\",\"endDate\":\"01/29/2018\",\"phase\":\"4\",\"class\":\"future\"},{\"label\":\"Sprint 30\",\"field\":\"sprint30\",\"startDate\":\"01/30/2018\",\"endDate\":\"02/12/2018\",\"phase\":\"5\",\"class\":\"future\"},{\"label\":\"Sprint 31\",\"field\":\"sprint31\",\"startDate\":\"02/13/2018\",\"endDate\":\"02/26/2018\",\"phase\":\"5\",\"class\":\"future\"},{\"label\":\"Sprint 32\",\"field\":\"sprint32\",\"startDate\":\"02/27/2018\",\"endDate\":\"03/12/2018\",\"phase\":\"5\",\"class\":\"future\"}]\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8fc8e7fa7c32e2cb4cb2","module.exports = {\n  \n  // Find a value in an array\n  arrayContains(array, value) {\n    for (let i=0;i<array.length;i++) {\n      if (array[i] === value) {\n        return true;\n      }\n    }\n    return false;\n  },\n  \n  // Parse links in configured columns\n  parseLink(value, link) {\n    let result = link.replace('@value', value);\n    let a = document.createElement('a');\n    a.setAttribute('href', result);\n    a.setAttribute('target', '_blank');\n    a.appendChild(document.createTextNode(value));\n    return a;\n  },\n  \n  // Parse a multi-part value\n  parseValue(value, data) {\n    const parts = value.split('.');\n    let result = data;\n    parts.forEach( (part) => {\n      if (result && result.hasOwnProperty(part)) {\n        result = result[part];\n      }\n    });\n    return result;\n  },\n  \n  // Parse Jira data into data element\n  parseData(input) {\n    let data = [];\n    let row = {}\n    input.issues.forEach( (task) => {\n\n      row = {};\n      row.key = task.key;\n      row.priority = task.fields.priority.name;\n      row.description = task.fields.summary;\n      row.status = task.fields.status.name;\n      row.assignee = (!task.fields.assignee) ? '' : task.fields.assignee.displayName;\n      \n      row.numtasks = 1;\n      row.debt = '';\n      \n      // Calculate risk\n      row.risk = 0;\n      if (row.priority.toLowerCase().indexOf('block') > -1) {\n        row.risk = 2;\n      }\n      \n      // Calculate numeric priority\n      row.rank = 6;\n      if (row.priority.toLowerCase().indexOf('block') > -1) {\n        row.rank = 0;\n      } else if (row.priority.toLowerCase().indexOf('highest') > -1) {\n        row.rank = 1;\n      } else if (row.priority.toLowerCase().indexOf('high') > -1) {\n        row.rank = 2;\n      } else if (row.priority.toLowerCase().indexOf('medium') > -1) {\n        row.rank = 3;\n      } else if (row.priority.toLowerCase().indexOf('lowest') > -1) {\n        row.rank = 5;\n      } else if (row.priority.toLowerCase().indexOf('low') > -1) {\n        row.rank = 4;\n      }\n      \n      // Calculate the estimate field\n      row.estimate = task.fields.aggregatetimeoriginalestimate;\n      row.timespent = (task.fields.aggregatetimespent) ? task.fields.aggregatetimespent : 0;\n      row.remaining = row.estimate-row.timespent;\n      if (!isNaN(row.estimate)) {\n        row.estimate = parseInt((parseInt(row.estimate, 10)/3600),10);\n      }\n      \n      // Calculate remaining & percentage\n      if (!isNaN(row.remaining)) {\n        row.remaining = parseInt((parseInt(row.remaining, 10)/3600),10);\n      }\n      \n      // Get epic information\n      row.epic = task.fields.customfield_10003;\n      row.epic = this.getEpic(row.epic, input);\n      \n      // Get sprint information\n      row.sprint = task.fields.customfield_10007;\n      if (row.sprint && row.sprint !== null && Array.isArray(row.sprint)) {\n        row.sprint = this.parseSprint(row.sprint);\n      }\n      \n      // Populate empty sprint values\n      if (!row.sprint) {\n        row.sprint = { current: 999, history: [] };\n      }\n      \n      // Capture Sprint data\n      row.pushed = 0;\n      if (row.sprint && row.sprint.history) {\n        row.sprint.history.forEach( (sp, index) => {\n          if (row.sprint.current === sp) {\n            row['sprint' + sp] = (row.remaining < 0)? '0' : row.remaining;\n            if (row['sprint' + sp] === '' || row['sprint' + sp] === 0) {\n              row['sprint' + sp] = '0';\n            }\n          } else {\n            row['sprint' + sp] = \"-\";\n            row.pushed++;\n          }\n        });\n      }\n      \n      // Add to collection\n      data.push(row);\n      \n    });\n    \n    // Sort based on Sprint then Priority / Rank\n    data.sort((a, b) => {\n      if (a.sprint) {\n        return a.sprint.current - b.sprint.current || a.rank - b.rank;\n      }\n    });\n    \n    console.log('----- Data Object -----');\n    console.log(data);\n    \n    return data;\n  },\n  \n  \n\n  // Append Sprints to Configuration\n  appendSprints(config, sprints) {\n    let conf = [];\n    config.forEach( (item) => {\n      conf.push(item);\n      if (item.label.indexOf('Sprint') === 0) {\n        sprints.forEach( (sprint) => {\n          conf.push(sprint);\n        });\n      }\n    });\n    config = conf;\n    return config;\n  },\n\n\n  // Parses Sprint value from string\n  parseSprint(input) {\n    let sprint = '';\n    let result = {};\n    result.raw = input;\n    result.current = input[input.length-1];\n    result.history = [];\n    \n    // Capture the current Sprint\n    sprint = result.current.match(/(name=[^,]*,)/);\n    if (sprint !== null && Array.isArray(sprint)) {\n      result.current = sprint[sprint.length-1].replace(/([^0-9]*)/ig, '');\n    }\n    \n    // Create a Sprint History log\n    result.raw.forEach( (item) => {\n      let sp = item.match(/(name=[^,]*,)/);\n      sp = sp[sp.length-1].replace(/([^0-9]*)/ig, '')\n      if (!result.history.includes(sp)) {\n        result.history.push(sp);\n      }\n    });\n    \n    return result;\n  },\n\n\n  // Create an Epic Link\n  getEpic(epic, data) {  \n    for (let i=0;i<data.issues.length;i++) {\n      if (data.issues[0].key === epic) {\n        return data.issues[0].fields.summary;\n      }\n    }\n    return epic;\n  },\n  \n};\n\n\n// WEBPACK FOOTER //\n// ./src/assets/scripts/utils.js","let utils = require('./utils.js');\nlet agg = require('./aggregates.js');\nlet render = require('./render.js');\nlet actions = require('./actions.js');\n\nlet config = require('../data/config.json');\nlet table = require('../data/table.json');\nlet sprints = require('../data/sprints.json');\n\nlet styles = require('../styles/base.scss');\n\n// Fetches content\nconst init = () => {\n  \n  const resources = [\n    config.baseUrl\n  ];\n  \n  const getContent = url => fetch(url)\n    .then(res => res.json())\n    .then(response => {\n      return response;\n    });\n  \n  Promise.all(resources.map(getContent)).then( results => {\n      \n      const stories = results[0];\n      \n      // Append Sprint Data to Configuration\n      let settings = utils.appendSprints(table, sprints);\n      \n      // Parse Story Data\n      let data = utils.parseData(stories);\n      let aggregates = agg.parseAggregates(data, sprints, config);\n      \n      // Render Header Row\n      render.renderHeader(sprints, config, aggregates);\n      \n      // Render Table\n      data.forEach( (task) => {\n        render.renderTable(task, settings, config, aggregates);\n      });\n      \n      // Render the Aggregate Values\n      render.renderAggregates(aggregates);\n      \n      // Assign Actions\n      actions.navigation(aggregates.sprint);\n      \n  });\n  \n};\n\n\n// Initialize the app\ninit();\n\n\n// WEBPACK FOOTER //\n// ./src/assets/scripts/index.js","module.exports = {\n\n  parseAggregates(data, sprints, config) {\n    \n    const aggregates = {\n      phase: 0,\n      sprint: 0,\n      risk: 0,\n      debt: 0,\n      mood: ':|',\n      totals: {\n        sprint: {\n          tasks: 0,\n          completed: 0,\n          rate: 0,\n          blockers: 0,\n          pushed: 0,\n          lost: 0,\n          incidents: 0\n        },\n        project: {\n          tasks: 0,\n          completed: 0,\n          rate: 0,\n          blockers: 0,\n          pushed: 0,\n          lost: 0,\n          incidents: 0\n        }\n      },\n      subtotals: []\n    };\n    \n    aggregates.sprint = this.getCurrentSprint(sprints);\n    aggregates.phase = this.getCurrentPhase(sprints);\n    \n    sprints.forEach( (sprint) => {\n      aggregates.subtotals[sprint.field] = {\n        phase: parseInt(sprint.phase, 10),\n        sprint: parseInt(sprint.label.replace(/[^0-9]/g,''), 10),\n        class: sprint.class,\n        tasks: 0,\n        completed: 0,\n        estimate: 0,\n        remaining: 0,\n        expected: 0,\n        spilled: 0,\n        hours: {\n          dev: 0,\n          qa: 0\n        }\n      };\n    });\n    \n    data.forEach( (row) => {\n      \n      // Get Pushed #\n      if (row.pushed && row.pushed > 0) {\n        aggregates.totals.project.pushed++;\n      }\n      \n      // Get risk\n      if (row.risk && row.risk > 0) {\n        aggregates.risk++;\n      }\n      \n      // Calculate story-based totals\n      if (row.numtasks && row.numtasks > 0) {\n        aggregates.totals.project.tasks++;\n        if (row.status === \"Done\") {\n          aggregates.totals.project.completed++;\n        }\n        if (row.priority === \"Blocker\") {\n          aggregates.totals.project.blockers++;\n        }\n        if (parseInt(row.sprint.current, 10) === parseInt(aggregates.sprint, 10)) {\n          aggregates.totals.sprint.tasks++;\n          if (row.status === \"Done\") {\n            aggregates.totals.sprint.completed++;\n          }\n          if (row.priority === \"Blocker\") {\n            aggregates.totals.sprint.blockers++;\n          }\n        }\n        \n        // Get Sprint totals\n        if (row.sprint && row.sprint.current) {\n          if (aggregates.subtotals.hasOwnProperty('sprint' + row.sprint.current)) {\n            aggregates.subtotals['sprint' + row.sprint.current].tasks++;\n            aggregates.subtotals['sprint' + row.sprint.current].estimate += (!isNaN(row.estimate)) ? row.estimate : 0;\n            aggregates.subtotals['sprint' + row.sprint.current].remaining += row.remaining;\n            aggregates.subtotals['sprint' + row.sprint.current].hours.dev = Math.ceil((aggregates.subtotals['sprint' + row.sprint.current].estimate * config.hoursPerPoint) * config.estimate.dev);\n            aggregates.subtotals['sprint' + row.sprint.current].hours.qa = Math.ceil((aggregates.subtotals['sprint' + row.sprint.current].estimate * config.hoursPerPoint) * config.estimate.qa);\n          }\n        }\n        \n        // Get Sprint-totals\n        sprints.forEach( (sprint) => {\n          if (row.hasOwnProperty(sprint.field) && row[sprint.field] === '-') {\n          \n            aggregates.subtotals[sprint.field].tasks++;\n            aggregates.subtotals[sprint.field].spilled++;\n            aggregates.subtotals[sprint.field].estimate += (!isNaN(row.estimate)) ? row.estimate : 0;\n            aggregates.subtotals[sprint.field].remaining += row.remaining;\n            aggregates.subtotals[sprint.field].hours.dev = Math.ceil((aggregates.subtotals[sprint.field].estimate * config.hoursPerPoint) * config.estimate.dev);\n            aggregates.subtotals[sprint.field].hours.qa = Math.ceil((aggregates.subtotals[sprint.field].estimate * config.hoursPerPoint) * config.estimate.qa);\n          \n          } else if (row.hasOwnProperty(sprint.field) && row.status === 'Done') {\n            \n            aggregates.subtotals[sprint.field].completed++;\n\n          }\n          \n        });\n        \n      }\n      \n    });\n    \n    // Final totals\n    aggregates.totals.project.rate = (aggregates.totals.project.completed / aggregates.totals.project.tasks * 100).toFixed(2);\n    aggregates.totals.sprint.rate = (aggregates.totals.sprint.completed / aggregates.totals.sprint.tasks * 100).toFixed(2);\n    \n    aggregates.mood = this.getCurrentMood(aggregates);\n    \n    console.log('----- Aggregate Data Object -----');\n    console.log(aggregates);\n    \n    return aggregates;\n    \n  },\n\n  getCurrentSprint(data) {\n    let sprint = 0;\n    data.forEach( (row) => {\n      if (row.class && row.class === \"current\") {\n        sprint = row.label.replace('Sprint ','');\n      }\n    });\n    return parseInt(sprint, 10);\n  },\n\n  getCurrentPhase(data) {\n    let phase = 0;\n    data.forEach( (row) => {\n      if (row.phase && row.class && row.class === \"current\") {\n        phase = row.phase;\n      }\n    });\n    return parseInt(phase, 10);\n  },\n\n  getCurrentMood(aggregates) {\n    let rating = 0;\n    \n    /*\n    aggregages.risk\n    aggregates.debt\n    aggregates.totals.sprint.blockers\n    aggregates.totals.sprint.rate\n    */\n    \n    // Risk Ranking\n    if (aggregates.risk > 10) {\n      rating += 5;\n    } else if (aggregates.risk > 20) {\n      rating += 10;\n    } else if (aggregates.risk >= 25) {\n      rating += 15;\n    }\n    \n    // Debt Ranking\n    if (aggregates.debt > 0) {\n      rating += 2;\n    } else if (aggregates.debt > 10) {\n      rating += 4;\n    } else if (aggregates.debt >= 15) {\n      rating += 6;\n    } else if (aggregates.debt >= 25) {\n      rating += 8;\n    }\n    \n    // Rate Ranking\n    if (aggregates.totals.sprint.expected < aggregates.totals.sprint.rate) {\n      rating -= 5;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 10) {\n      rating += 2;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 15) {\n      rating += 4;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 20) {\n      rating += 6;\n    } else if (aggregates.totals.sprint.expected - aggregates.totals.sprint.rate > 25) {\n      rating += 8;\n    }\n    \n    // Blocker Ranking\n    if (aggregates.totals.sprint.blockers > 0) {\n      rating += 25;\n    }\n    \n    // Moods\n    if (rating <= 5) {\n      aggregates.mood = \":)\";\n    } else if (rating > 5 && rating <= 10) {\n      aggregates.mood = \":|\";\n    } else if (rating > 15 && rating <= 20) {\n      aggregates.mood = \":/\";\n    } else if (rating > 25) {\n      aggregates.mood = \":(\";\n    }\n  },\n\n};\n\n\n// WEBPACK FOOTER //\n// ./src/assets/scripts/aggregates.js","let utils = require('./utils.js');\nlet markobj = require('markobj');\n\nmodule.exports = {\n\n  // Inject Sprints / Phases into Table\n  renderHeader(sprints, config, aggregates) {\n    let th1, th2, th3 = '';\n    let dates = '';\n    let d1, d2, current = '';\n    const newRow1 = document.createElement('tr');\n    const newRow2 = document.createElement('tr');\n    const newRow3 = document.createElement('tr');\n    const header = document.querySelector('#release-plan thead');\n    const headRow = header.querySelector('tr');\n    const headers = headRow.querySelectorAll('th');\n    \n    const phases = [];\n    const sprintsPerPhase = parseInt(config.sprintsPerPhase, 10);\n    \n    headers.forEach( (el) => {\n      if (el.innerText === \"Sprint\") {\n        newRow1.appendChild(el);\n        sprints.forEach( (sprint) => {\n          \n          // Populate Phase labels\n          if (!utils.arrayContains(phases, sprint.phase)) {\n            \n            current = '';\n            if (aggregates && parseInt(aggregates.phase, 10) === parseInt(sprint.phase, 10)) {\n              current = 'current';\n            }\n            \n            th1 = document.createElement('th');\n            th1.setAttribute('colspan', sprintsPerPhase);\n            th1.setAttribute('class', `${current} phase phase${sprint.phase} ${sprint.class}`);\n            th1.appendChild(document.createTextNode(`Phase ${sprint.phase}`));\n          }\n          \n          // Populate Sprint labels\n          th2 = document.createElement('th');\n          th2.setAttribute('class',`sprint nowrap ${sprint.class}`);\n          th2.appendChild(document.createTextNode(sprint.label));\n          \n          // Populate dates\n          th3 = document.createElement('th');\n          th3.setAttribute('class',`dates nowrap ${sprint.class}`);\n          d1 = new Date(sprint.startDate);\n          d2 = new Date(sprint.endDate);\n          dates = d1.getMonth()+1 + '/' + d1.getDate();\n          dates += '-' + (d2.getMonth()+1) + '/' + d2.getDate();\n          th3.appendChild(document.createTextNode(dates));\n          \n          // Append rows to the header\n          if (!utils.arrayContains(phases, sprint.phase)) {\n            newRow1.appendChild(th1);\n            phases.push(sprint.phase);\n          }  \n          newRow2.appendChild(th2);\n          newRow3.appendChild(th3);\n          \n        });\n      } else {\n        newRow1.appendChild(el);\n      }\n    });\n    \n    header.removeChild(headRow);\n    header.appendChild(newRow1);\n    header.appendChild(newRow2);\n    header.appendChild(newRow3);\n    \n  },\n\n\n  // Renders rows into the table\n  renderTable(task, sprints, config, aggregates) {\n    \n    const tbody = document.querySelector('#release-plan tbody');\n    let tr, td;\n    let column = '';\n    let value = '';\n    \n    tr = document.createElement('tr');\n    tr.setAttribute('id',task.key);\n    tr.setAttribute('data-sprint', task.sprint.current);\n    tr.setAttribute('data-assignee', task.assignee);\n    \n    if (task.priority.toLowerCase().indexOf('block') > -1) {\n      tr.setAttribute('class','blocker');\n    }\n    \n    tbody.appendChild(tr);\n    \n    sprints.forEach( (item, index) => {\n      \n      column = item.label;\n      value = task[item.field];\n      \n      if (item.field.indexOf('.') > -1) {\n        value = utils.parseValue(item.field,task);\n      }\n      \n      // Create a new cell\n      td = document.createElement('td');\n      \n      // Clear \"999\" from Sprints\n      if (item.field.indexOf('sprint') > -1 && value === 999) {\n        value = '';\n      }\n      \n      if (item.class.indexOf('@value') > -1) {      \n        let cls = value.toLowerCase().replace(/(\\s){1,}/ig,'-');\n        td.setAttribute('class',`${cls} ${item.class}`);\n      } else {\n        if (item.phase && item.class.indexOf('phase') === -1) {\n          item.class += ` phase${item.phase}`;\n        }\n        td.setAttribute('class', item.class);\n      }\n      \n      if (typeof value !== \"object\") {\n        \n        if (item.title) {\n          td.setAttribute('title', value);\n        }\n        \n        if (item.hidden) {\n          \n          td.setAttribute('data-value', value);\n          \n        } else if (item.link && item.link !== '') {\n          let a = utils.parseLink(value, item.link);\n          td.appendChild(a);\n          \n        } else if (value && value !== '') {\n          \n          td.appendChild(document.createTextNode(value));\n          \n          if (value === \"-\") {\n            td.setAttribute('class', `${item.class} pushed`);\n          }\n          \n          if (task.sprint && task.sprint.current && value !== '-' && column.indexOf('Sprint ') > -1) {\n            td.setAttribute('class', `${item.class} active`);\n          }\n          \n        }\n        \n      }\n      \n      tr.appendChild(td);\n    });\n    \n  },\n\n\n  // Renders totals into the grid\n  renderAggregates(aggregates) {\n    \n    let sprints1,sprints2,sprints3,sprints4,sprints5,sprints6,sprints7,sprints8,blanks;\n    const table = document.querySelector('table');\n    \n    blanks = '<tr><td colspan=\"6\" class=\"empty label\"></td>';\n    \n    // Loop through the aggregate values\n    for (let key in aggregates.subtotals) {\n\n      let percentage = ((aggregates.subtotals[key].tasks / aggregates.totals.project.tasks) * 100);\n      let completion = ((aggregates.subtotals[key].completed / aggregates.totals.project.tasks) * 100);\n      let completionClass = (completion < 100) ? 'bad' : 'good';\n      let spilledClass = (parseInt(aggregates.subtotals[key].spilled, 10) > 0) ? 'warning' : 'white';\n      let phase = `phase${aggregates.subtotals[key].phase}`;\n      let defaultClass = aggregates.subtotals[key].class;\n      \n      sprints1 += `<td class=\"${defaultClass} total\">${aggregates.subtotals[key].estimate}</td>`;\n      sprints2 += `<td class=\"${defaultClass} subtotal\">${aggregates.subtotals[key].hours.dev}</td>`;\n      sprints3 += `<td class=\"${defaultClass} subtotal\">${aggregates.subtotals[key].hours.qa}</td>`;\n      sprints4 += `<td class=\"${defaultClass} ${spilledClass} ${phase}\">${aggregates.subtotals[key].spilled}</td>`;\n      sprints5 += `<td class=\"${defaultClass} subtotal ${phase}\">${aggregates.subtotals[key].tasks}</td>`;\n      sprints6 += `<td class=\"${defaultClass} total ${phase}\">${percentage}%</td>`;\n      sprints7 += `<td class=\"${defaultClass} subtotal ${phase}\">${aggregates.subtotals[key].completed}</td>`;\n      sprints8 += `<td class=\"${defaultClass} subtotal ${completionClass}\">${completion}%</td>`;\n      \n      blanks += `<td class=\"${defaultClass} empty ${phase}\"></td>`;\n      \n    }\n    \n    blanks += '<td colspan=\"5\" class=\"empty plain\"></td></tr>';\n    \n    // Build out the footer\n    let footerRows = markobj(`<tfoot>\n      <tr><td colspan=\"6\" class=\"label\">Total story points per Sprint</td>${sprints1}<td colspan=\"5\" class=\"plain\"></td></tr>\n      <tr><td colspan=\"6\" class=\"label\">Total Dev Hours per Sprint</td>${sprints2}<td colspan=\"5\" class=\"plain\"></td></tr>\n      <tr><td colspan=\"6\" class=\"label\">Total QA Hours per Sprint</td>${sprints3}<td colspan=\"5\" class=\"plain\"></td></tr>\n      <tr><td colspan=\"6\" class=\"label\">Stories Spilled across Sprints</td>${sprints4}<td colspan=\"5\" class=\"plain\"></td></tr>\n      ${blanks}\n      <tr><td colspan=\"6\" class=\"label\">Total Stories by Sprint</td>${sprints5}<td colspan=\"5\" class=\"plain\"></td></tr>\n      <tr><td colspan=\"6\" class=\"label\">Target Completion Percentage</td>${sprints6}<td colspan=\"5\" class=\"plain\"></td></tr>\n      ${blanks}\n      <tr><td colspan=\"6\" class=\"label\">Sprint Stories Completed</td>${sprints7}<td colspan=\"5\" class=\"plain\"></td></tr>\n      <tr><td colspan=\"6\" class=\"label\">Sprint Completion Percentage</td>${sprints8}<td colspan=\"5\" class=\"plain\"></td></tr>\n    </tfoot>`);\n    \n    // Append the footer to the table\n    table.appendChild(footerRows);\n    \n  },\n\n};\n\n\n// WEBPACK FOOTER //\n// ./src/assets/scripts/render.js","module.exports = exports = markobj;\n\n// Returns an object built from an HTML string\nfunction markobj (html) {\n\n  let rootEl = 'div';\n  let rootIx = 0;\n\n  // If you're creating elements that are children of tables, then you have to\n  // use a table as the root element. A tbody is also appended to any newly\n  // made table, so our returned index has to increase\n  if (\n    html.substring(1,3) === 'tr' ||\n    html.substring(1,3) === 'td' ||\n    html.substring(1,3) === 'th' ||\n    html.substring(1,6) === 'tbody' ||\n    html.substring(1,6) === 'thead' ||\n    html.substring(1,6) === 'tfoot' ||\n    html.substring(1,8) === 'caption' ||\n    html.substring(1,4) === 'col' ||\n    html.substring(1,9) === 'colgroup'\n  ) {\n    rootEl = 'table';\n  }\n\n  if (\n    html.substring(1,6) === 'tbody' ||\n    html.substring(1,6) === 'thead' ||\n    html.substring(1,6) === 'tfoot'\n  ) {\n    rootIx = 0;\n  }\n\n  if (html.substring(1,3) === 'tr') {\n    rootIx = 1;\n  }\n\n  if (html.substring(1,3) === 'td' || html.substring(1,3) === 'th') {\n    rootIx = 2;\n  }\n\n  let tmp = document.createElement(rootEl);\n  tmp.innerHTML = html;\n\n  if(rootIx === 2) {\n    return tmp.childNodes[0].childNodes[0].childNodes[0];\n  } else if(rootIx === 1) {\n    return tmp.childNodes[0].childNodes[0];\n  }\n  return tmp.childNodes[0];\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/markobj/markobj.js","let utils = require('./utils.js');\n\nmodule.exports = {\n  \n  displayCurrent(sprint) {\n    this.displayNone();\n    const future = document.querySelectorAll('.future');\n    future.forEach( (el) => {\n      el.style.display = 'none';\n    });\n    const mine = document.querySelectorAll(`[data-sprint=\"${sprint}\"]`);\n    mine.forEach( (el) => {\n      el.style.display = 'table-row';\n    });\n  },\n  \n  displayMe() {\n    const me = 'Joshua Miller';\n    const theirs = document.querySelectorAll('table tbody tr');\n    theirs.forEach( (el) => {\n      el.style.display = 'none';\n    });\n    const mine = document.querySelectorAll(`[data-assignee=\"${me}\"]`);\n    mine.forEach( (el) => {\n      el.style.display = 'table-row';\n    });\n  },\n  \n  displayAll() {\n    const rows = document.querySelectorAll('table tbody tr');\n    rows.forEach( (el) => {\n      el.style.display = 'table-row';\n    });\n    const future = document.querySelectorAll('.future');\n    future.forEach( (el) => {\n      el.style.display = 'table-cell';\n    });\n  },\n  \n  displayNone() {\n    const rows = document.querySelectorAll('table tbody tr');\n    rows.forEach( (el) => {\n      el.style.display = 'none';\n    });\n  },\n  \n  /* Assign Click Actions to Buttons */\n  navigation(sprint) {\n    \n    const nav = document.querySelectorAll('nav ul li a');\n    nav.forEach( (button) => {\n      button.addEventListener('click', (event) => {\n        const element = event.target;  \n        const id = element.getAttribute('id');        \n        if (id === 'current') {\n          this.displayCurrent(sprint);\n        } else if (id === 'me') {\n          this.displayMe();\n        } else {\n          this.displayAll();\n        }\n      });\n    });\n    \n  },\n  \n};\n\n\n// WEBPACK FOOTER //\n// ./src/assets/scripts/actions.js","module.exports = {\"hideFutureSprints\":false,\"sprintsPerPhase\":3,\"hoursPerPoint\":1,\"estimate\":{\"dev\":0.66,\"qa\":0.34},\"risk\":{\"blocker\":2,\"delay\":1,\"early\":-1,\"debt\":0.25,\"resourceDeficitHourBlocks\":25},\"baseUrl\":\"http://localhost/viz/src/assets/data/sample-full.json\",\"jiraUrl\":\"https://daymon.atlassian.net/rest/api/2/search?jql=project%20%3D%20NES%20and%20status%20!%3D%20resolved%20and%20type%20in%20(story,epic,bug,task)%20order%20by%20rank%20&maxResults=1000&startAt=0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/data/config.json\n// module id = 6\n// module chunks = 0","module.exports = [{\"label\":\"Priority\",\"field\":\"priority\",\"class\":\"priority @value\",\"hidden\":true,\"title\":true},{\"label\":\"Epic\",\"field\":\"epic\",\"class\":\"nowrap\"},{\"label\":\"Description\",\"field\":\"description\",\"class\":\"left wide\"},{\"label\":\"Identifier\",\"field\":\"key\",\"class\":\"nowrap\",\"link\":\"https://daymon.atlassian.net/browse/@value\"},{\"label\":\"Estimate\",\"field\":\"estimate\",\"class\":\"\"},{\"label\":\"Sprint\",\"field\":\"sprint.current\",\"class\":\"\"},{\"label\":\"Status\",\"field\":\"status\",\"class\":\"status @value\"},{\"label\":\"Risk\",\"field\":\"risk\",\"class\":\"risk\"},{\"label\":\"Debt\",\"field\":\"debt\",\"class\":\"debt grey-10\"},{\"label\":\"Pushed\",\"field\":\"pushed\",\"class\":\"pushed grey-10\"},{\"label\":\"Assignee\",\"field\":\"assignee\",\"class\":\"left\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/data/table.json\n// module id = 7\n// module chunks = 0","module.exports = [{\"label\":\"Sprint 18\",\"field\":\"sprint18\",\"startDate\":\"08/14/2017\",\"endDate\":\"08/28/2017\",\"phase\":\"1\",\"class\":\"past\"},{\"label\":\"Sprint 19\",\"field\":\"sprint19\",\"startDate\":\"08/29/2017\",\"endDate\":\"09/11/2017\",\"phase\":\"1\",\"class\":\"past\"},{\"label\":\"Sprint 20\",\"field\":\"sprint20\",\"startDate\":\"09/12/2017\",\"endDate\":\"09/25/2017\",\"phase\":\"1\",\"class\":\"current\"},{\"label\":\"Sprint 21\",\"field\":\"sprint21\",\"startDate\":\"09/26/2017\",\"endDate\":\"10/09/2017\",\"phase\":\"2\",\"class\":\"future\"},{\"label\":\"Sprint 22\",\"field\":\"sprint22\",\"startDate\":\"10/10/2017\",\"endDate\":\"10/23/2017\",\"phase\":\"2\",\"class\":\"future\"},{\"label\":\"Sprint 23\",\"field\":\"sprint23\",\"startDate\":\"10/24/2017\",\"endDate\":\"11/06/2017\",\"phase\":\"2\",\"class\":\"future\"},{\"label\":\"Sprint 24\",\"field\":\"sprint24\",\"startDate\":\"11/07/2017\",\"endDate\":\"11/20/2017\",\"phase\":\"3\",\"class\":\"future\"},{\"label\":\"Sprint 25\",\"field\":\"sprint25\",\"startDate\":\"11/21/2017\",\"endDate\":\"12/04/2017\",\"phase\":\"3\",\"class\":\"future\"},{\"label\":\"Sprint 26\",\"field\":\"sprint26\",\"startDate\":\"12/05/2017\",\"endDate\":\"12/18/2017\",\"phase\":\"3\",\"class\":\"future\"},{\"label\":\"Sprint 27\",\"field\":\"sprint27\",\"startDate\":\"12/19/2017\",\"endDate\":\"01/01/2018\",\"phase\":\"4\",\"class\":\"future\"},{\"label\":\"Sprint 28\",\"field\":\"sprint28\",\"startDate\":\"01/02/2018\",\"endDate\":\"01/15/2018\",\"phase\":\"4\",\"class\":\"future\"},{\"label\":\"Sprint 29\",\"field\":\"sprint29\",\"startDate\":\"01/16/2018\",\"endDate\":\"01/29/2018\",\"phase\":\"4\",\"class\":\"future\"},{\"label\":\"Sprint 30\",\"field\":\"sprint30\",\"startDate\":\"01/30/2018\",\"endDate\":\"02/12/2018\",\"phase\":\"5\",\"class\":\"future\"},{\"label\":\"Sprint 31\",\"field\":\"sprint31\",\"startDate\":\"02/13/2018\",\"endDate\":\"02/26/2018\",\"phase\":\"5\",\"class\":\"future\"},{\"label\":\"Sprint 32\",\"field\":\"sprint32\",\"startDate\":\"02/27/2018\",\"endDate\":\"03/12/2018\",\"phase\":\"5\",\"class\":\"future\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/data/sprints.json\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}